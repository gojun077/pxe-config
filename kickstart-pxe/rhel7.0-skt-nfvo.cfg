# rhel7.0-skt-nfvo.cfg
# Kickstart file for RHEL7.0 install on 3 HP___ servers
# These 3 servers will be used as Nova Compute hosts as
# part of an RDO 6 installation by Samsung SDS for Samsung Heavy
# Industries

# After the installation, Samsung SDS has requested that only
# the kernel be upgraded to 7.1

#version=RHEL7
# System authorization information
#auth --useshadow --passalgo=md5
# TODO add md5-hashed password

# Install OS instead of upgrade
install
# Reboot after installation
reboot
# Use network installation
url --url="http://192.168.95.97:8000/rhel7.0-skt-nfvo.cfg"
# Use graphical install
graphical
# Firewall configuration
firewall --disabled
firstboot --disable
ignoredisk --only-use=sda
# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8

###Network information

# SELinux configuration
selinux --disabled
# System services
services --enabled="chronyd"
# System timezone
timezone Asia/Seoul --isUtc
# System bootloader configuration
bootloader --append="crashkernel=auto" --location=mbr --driveorder="sda" --boot-drive=sda
# Partition clearing information
clearpart --all --initlabel
zerombr
# Disk partitioning information
part /boot --asprimary --fstype="ext4" --ondisk=sda --size=524288
part / --asprimary --fstype="ext4" --ondisk=sda --grow
#part swap --asprimary --fstype="swap" --ondisk=sda --size=16384   # no swap
#part pv.10 --fstype="lvmpv" --ondisk=sdb --size=572139
#volgroup VG01 --pesize=4096 pv.10
#logvol /VM --fstype="ext4" --grow --size=1 --name=VM --vgname=VG01


%packages
@GNOME
@additional-devel
@base
@compat-libraries
@console-internet
@core
@debugging
@desktop-debugging
@development
@dial-up
@ftp-server
@hardware-monitoring
@internet-browser
@java-platform
@large-systems
@legacy-unix
@legacy-x
@network-file-system-client
@network-tools
@performance
@perl-runtime
@ruby-runtime
@system-management
@x11
ElectricFence
OpenIPMI
PackageKit
PackageKit-device-rebind
PackageKit-gstreamer-plugin
PackageKit-gtk3-module
PackageKit-yum
PyQt4-devel
Red_Hat_Enterprise_Linux-Release_Notes-7-en-US
Red_Hat_Enterprise_Linux-Release_Notes-7-ko-KR
SDL-devel
abrt-gui
acpid
alsa-plugins-pulseaudio
alsa-utils
ant
arptables
arptables_jf
atlas
authconfig-gtk
avahi
avahi-ui-gtk3
babel
bltk
bzr
chrony
chrpath
cmake
compat-db47
compat-gcc-44
compat-gcc-44-c++
comps-extras
control-center
cryptsetup
cryptsetup-libs
cups
cups-devel
cvs
cyrus-sasl-md5
dbus-devel
dejagnu
desktop-file-utils
dos2unix
dracut
dvd+rw-tools
e2fsprogs-devel
ecj
edac-utils
elinks
environment-modules
expat-devel
expect
file-libs
file-roller
filesystem
finger
firstboot
flac-libs
foomatic
foomatic-db
foomatic-db-filesystem
foomatic-db-ppds
freeglut-devel
ftp
fuse
fuse-devel
gamin
gcc-gnat
gcc-objc
gcc-objc++
gdb-gdbserver
gdm
gedit
genisoimage
ghostscript
ghostscript-fonts
glibc-utils
glibmm24
glx-utils
gmp-devel
gnome-common
gnome-devel-docs
gnote
gnutls-devel
gpm
grub2
gtk2
gtk2-devel-docs
gtkmm24
gtksourceview3
gtkspell
gucharmap
gvfs
gvfs-afc
gvfs-archive
gvfs-fuse
gvfs-gphoto2
gvfs-smb
hdparm
httpd-devel
hunspell-devel
hunspell-ko
i2c-tools
ibus-gtk2
ibus-gtk3
ibus-hangul
ibus-libs
im-chooser
imake
imsettings
imsettings-libs
indent
infinipath-psm
ipmitool
iptables-devel
iptables-services
javapackages-tools
jna
jpackage-utils
junit
kde-filesystem
kde-l10n-Korean
kdebase-workspace-devel
kdegraphics-devel
kdelibs
kdelibs-common
kdelibs-devel
kdenetwork-devel
kdepim-devel
kdepimlibs-devel
kdesdk-devel
kdesdk-kompare-devel
ksh
libIDL
libXau-devel
libXaw-devel
libXinerama-devel
libXmu
libXmu-devel
libXp
libXpm-devel
libXrandr-devel
libaio-devel
libao
libart_lgpl
libblkid-devel
libbonobo
libbonoboui
libcap-devel
libcgroup-tools
libdrm-devel
libesmtp
libgcrypt-devel
libglade2
libgnome
libgnomecanvas
libgnomekbd
libgnomeui
libgsf
libgtop2
libgudev1-devel
libhangul
libhugetlbfs-devel
libibverbs-devel
libiptcdata
libmng-devel
libmpcdec
libmtp
libmusicbrainz5
libnl-devel
libopenraw
libproxy
libproxy-mozjs
librdmacm
libreport
libreport-anaconda
libreport-cli
libreport-filesystem
libreport-gtk
libreport-plugin-bugzilla
libreport-plugin-mailx
libreport-plugin-reportuploader
libreport-plugin-rhtsupport
libreport-python
libreport-rhel
libreport-rhel-anaconda-bugzilla
libreport-web
libreswan
libsigc++20
libspectre
libstdc++
libstdc++-docs
libstdc++.i686
libtiff-devel
libudev-devel
libusb
libusbx
libusbx-devel
libuser-python
libuuid-devel
libvirt-client
libvirt-devel
libvirt-java
libvirt-java-devel
libwnck3
libxslt-devel
linux-firmware
lksctp-tools
lm_sensors
man-db
man-pages
man-pages-ko
man-pages-overrides
mariadb
mariadb-devel
mariadb-libs
mariadb-server
mcelog
memtest86+
mercurial
mod_dav_svn
mousetweaks
mtools
nasm
nautilus
nautilus-extensions
nautilus-open-terminal
nautilus-sendto
ncompress
net-snmp
net-snmp-devel
net-snmp-utils
nm-connection-editor
nmap
nmap-ncat
nss_compat_ossl
ntp
numactl-devel
obex-data-server
openjade
openmotif
openmotif-devel
openobex
opensp
openssh-askpass
oprofile-gui
pam-devel
papi
papi-devel
pax
pcre-devel
perl-CPANPLUS
perl-DBD-MySQL
perl-DBD-SQLite
perl-IO-Compress.noarch
perl-SGMLSpm
perl-Test-Pod
perl-Test-Pod-Coverage
perltidy
popt-devel
pygobject2
pygobject3
python
python-beaker
python-dmidecode
python-docs
python-libs
python-magic
python-matplotlib
python-meh
python-nose
qt3-devel
raptor2
rarian
rarian-compat
redhat-lsb
redhat-lsb-core
redhat-lsb-printing
rhn-setup-gnome
rpmdevtools
rpmlint
ruby-irb
sane-backends-devel
sgpio
startup-notification-devel
subscription-manager-firstboot
subscription-manager-gui
systemd
systemtap-client
systemtap-initscript
systemtap-sdt-devel
systemtap-server
tcl-devel
tcp_wrappers
tcp_wrappers-devel
telnet
telnet-server
tk-devel
tmpwatch
totem
totem-nautilus
tuned
tuned-utils
udisks2
unique3
unique3-devel
unixODBC-devel
urw-fonts
usermode-gtk
util-linux
watchdog
wireshark
xdg-user-dirs-gtk
xferstats
xinetd
xorg-x11-docs
xorg-x11-drv-keyboard
xorg-x11-drv-mouse
xorg-x11-drv-openchrome
xorg-x11-proto-devel
xrestop
xz-devel
%end

%post
########## Post Configure / Security Patch For SKT ##########
NOW=`date +%Y%m%d`
RO=/root/growin/$NOW
mkdir -p $RO

##### Arrange Daemon #####
for stop in $(chkconfig --list | awk '{print $1}' | cut -d : -f 1); do
  chkconfig $stop off
done
chkconfig network on

for stop in $(systemctl list-unit-files --type service| awk '{print $1}' | cut -d : -f 1); do
  systemctl disable "$stop"
done

DAEMON=(acpid
        arptables
        auditd
        avahi-daemon
        crond
        gpm
        irqbalance
        kdump
        lm_sensors
        messagebus
        microcode
        ntpd
        rpcbind
        rsyslog
        sysstat
        xinetd
        telnet
        vsftpd
        sshd
        gdm
        )

for i in ${DAEMON[*]}; do
  systemctl enable "$i"
done

##### Add user (name : suser) #####
/usr/sbin/useradd suser -G wheel
echo "growin" | passwd --stdin suser

##### Editing /etc/profile #####
/bin/cat << EOF >> /etc/profile
# Add umask for SKT
umask 0022
HISTSIZE=5000
HISTTIMEFORMAT='%F %T'
export HISTSIZE HISTTIMEFORMAT
EOF

##### Add in /etc/security/limits.conf #####
/bin/cat << EOF >> /etc/security/limits.conf
* soft nofile 8192
* hard nofile 65535
* soft nproc 8192
* soft core 20480
EOF

/bin/cat << EOF > /etc/security/limits.d/20-nproc.conf
# Default limit for number of user's processes to prevent
# accidental fork bombs.
# See rhbz #432903 for reasoning.
#* soft nproc 4096
#root soft nproc unlimited
EOF

##### Setting Kernel Parameter #####
# Add Kernel parameter
/bin/cat << EOF >> /etc/sysctl.conf
# Controls the System Request debugging functionality of the kernel
kernel.sysrq = 1
# Add Kernel parameter for SKT
kernel.msgmni = 1024
kernel.sem = 1000 32000 32 512
kernel.threads-max = 270335
net.ipv4.tcp_max_syn_backlog = 8192
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_keepalive_time = 600
net.ipv4.tcp_syn_retries = 2
net.ipv4.tcp_retries2 = 5
net.core.rmem_default = 4194304
net.core.wmem_default = 4194304
net.core.rmem_max = 8388608
net.core.wmem_max = 8388608
net.ipv4.tcp_mem = 8388608 8388608 8388608
EOF

##### modify sysstat #####
/usr/bin/perl -pi -e 's/HISTORY=7/HISTORY=28/g' /etc/sysconfig/sysstat
/usr/bin/perl -pi -e 's/\*\/10/\*\/5/' /etc/cron.d/sysstat
##### Setting Logrotate #####
# Change logrotate
/usr/bin/perl -pi -e 's/rotate 1/rotate 3/g' /etc/logrotate.conf
/usr/bin/perl -pi -e 's/rotate 4/rotate 12/g' /etc/logrotate.conf
/usr/bin/perl -pi -e 's/0664/0600/g' /etc/logrotate.conf
systemctl restart rsyslog


##### Network Setting #####
# Samsung SDS says they will set up networking & bonding
# Configure Bonding Module
# /bin/cat << EOF >> /etc/modprobe.d/bonding.conf
# alias bond0 bonding
# alias bond1 bonding
# EOF

# Bonding Network Script
# /bin/cat << EOF > /etc/sysconfig/network-scripts/ifcfg-bond0
# DEVICE="bond0"
# BOOTPROTO="none"
# ONBOOT="no"
# IPADDR=""
# NETMASK="255.255.255.0"
# GATEWAY=""
# BONDING_OPTS="mode=1 miimon=100"
# USERCTL="no"
# EOF

/bin/cat << EOF > /etc/sysconfig/network-scripts/ifcfg-bond1
# DEVICE="bond1"
# BOOTPROTO="none"
# ONBOOT="no"
# IPADDR=""
# NETMASK="255.255.255.0"
# BONDING_OPTS="mode=1 miimon=100"
# USERCTL="no"
# EOF

# Add Common Rounting Tables for Sungsu
# /bin/cat << EOF > /etc/sysconfig/network-scripts/route-bond1
# #172.18.96.233 via NET_GATEWAY
# #172.18.96.234 via NET_GATEWAY
# #70.12.205.159 via NET_GATEWAY
# #70.12.231.169 via NET_GATEWAY
# #172.18.5.0/24 via NET_GATEWAY
# #192.168.240.0/24 via NET_GATEWAY
# #172.18.1.20 via NET_GATEWAY
# #70.12.202.15 via NET_GATEWAY
# #172.18.101.128/25 via NET_GATEWAY
# #172.18.83.86 via NET_GATEWAY
# EOF

##### Additional Network Setting #####
# Add NOZEROCONF
/bin/echo "NOZEROCONF=yes" >> /etc/sysconfig/network
# Clean DNS Server Config
/bin/cat /dev/null > /etc/resolv.conf
# Setting Telnet Server
/usr/bin/perl -pi -e 's/disable = yes/disable = no/' /etc/xinetd.d/telnet
# Reset NTP
/usr/bin/perl -pi -e 's/^server/#server/g' /etc/ntp.conf
# Setting Loopback Network
/bin/echo "MTU=1500" >> /etc/sysconfig/network-scripts/ifcfg-lo

##### ETC #####
# Delete package uucp
/bin/rpm -e uucp
# Disable Firstboot
echo "RUN_FIRSTBOOT=NO" > /etc/sysconfig/firstboot

##### Configure Kernel Dump #####
/bin/cat << EOF >> /etc/kdump.conf
kdump_pre /root/growin/kdump.sh
extra_bins /bin/bash
EOF

/bin/cat << EOF >> /root/growin/kdump.sh
#!/bin/bash
echo "########## kdump pre execute ##########"
mkdir /test
mount /dev/sda1 /test
echo "########## kdump pre execute ##########" >> /test/file.out
date >> /test/file.out
dmesg >> /test/file.out
exit 0;
EOF

/bin/chmod 777 /root/growin/kdump.sh


############################################
########## Apply Security Patch ############
############################################

##### Setting Banner File #####
# Changing /etc/issue & /etc/issue.net
/bin/cat << EOF > /etc/issue
#####################################################################
# This system is for the use of authorized users only.
# Individuals using this computer system without authority, or in
# excess of their authority, are subject to having all of their
# activities on this system monitored and recorded by system
# personnel.
#
#
# In the course of monitoring individuals improperly using this
# system, or in the course of system maintenance, the activities
# of authorized users may also be monitored.
#
#
# Anyone using this system expressly consents to such monitoring
# and is advised that if such monitoring reveals possible
# evidence of criminal activity, system personnel may provide the
# evidence of such monitoring to law enforcement officials.
#####################################################################
EOF

/bin/cat /etc/issue > /etc/issue.net

# Changing vsftpd banner
/usr/bin/perl -pi -e 's/anonymous_enable=YES/anonymous_enable=NO/g' /etc/vsftpd/vsftpd.conf

/usr/bin/perl -pi -e 's/#ftpd_banner=Welcome to blah FTP service/ftpd_banner=WARNING:Authorized use only/g' /etc/vsftpd/vsftpd.conf

# Delete "lp, uucp, nuucp" user
if [ `cat /etc/passwd | egrep "lp|uucp|nuucp" | wc -l` -eq 0 ]; then
  echo "lp|uucp|nuucp User CLEAR!!"
else
  grep -v lp /etc/passwd > $HOME/passwd.1
  grep -v uucp $HOME/passwd.1 > $HOME/passwd.2
  grep -v nuucp $HOME/passwd.2 > $HOME/passwd
  cat $HOME/passwd > /etc/passwd
  rm -f $HOME/passwd*
fi

# Change /etc/login.defs parameter
if [ `cat /etc/login.defs | grep -i "PASS_MIN_LEN"| grep -v "#" | egrep [0-7]| awk '{print $2}'| wc -l` -eq 0 ]; then
  echo "login.defs CLEAR!!"
else
  cat /etc/login.defs | grep -v "PASS_MIN_LEN" | grep -v "PASS_MAX_DAYS" | grep -v "PASS_MIN_DAYS" > $HOME/login.tmp
  echo "" >> $HOME/login.tmp
  echo "# Add passwd rule" >> $HOME/login.tmp
  echo "PASS_MIN_LEN 9" >> $HOME/login.tmp
  echo "PASS_MAX_DAYS 70" >> $HOME/login.tmp
  echo "PASS_MIN_DAYS 7" >> $HOME/login.tmp
  cat $HOME/login.tmp > /etc/login.defs
  rm -f $HOME/login.tmp
fi

# Disable setid & setgid File
FILES=(/sbin/dump
       /usr/bin/lpq-lpd
       /usr/bin/newgrp
       /sbin/restore
       /usr/bin/lpr
       /usr/sbin/lpc
       /sbin/unix_chkpwd
       /usr/bin/lpr-lpd
       /usr/sbin/lpc-lpd
       /usr/bin/at
       /usr/bin/lprm
       /bin/traceroute
       /usr/bin/lpq
       /usr/bin/lprm-lpd
       )

for check_file in ${FILES[*]}; do
  if [ -f $check_file ]; then
    if [ -g $check_file -o -u $check_file ]; then
      echo `ls $check_file` > $RO/list.tmp
    fi
  :
  fi
done

if [ -f "$RO"/list.tmp ]; then
  chmod 711 /usr/bin/newgrp
  chmod 555 /sbin/unix_chkpwd
  chmod 755 /usr/bin/at
  chmod 755 /bin/traceroute
fi

if [ -f "$RO"/list.tmp ]; then
  rm -rf "$RO"/list.tmp >> "$RO"/patch.log 2>&1
fi

echo -e "\n" >> "$RO"/patch.log

echo "# 3.04 statd & lockd process check" >> "$RO"/patch.log

if [ "$(ps -ef | egrep "statd|lockd" | egrep -v "grep|rpc|statdaemon|emi|kblockd" | wc -l)" -eq 0 ]; then
  echo " ==> 3.04 statd & lockd CLEAR !!" >> "$RO"/patch.log
else
  systemctl stop nfs.service
  systemctl stop nfslock.service
  echo " ==> 3.04 nfs & nfslock stop OK !!" >> "$RO"/patch.log
fi

##### Check session timeout #####
if env | grep -i -E "TMOUT|TIMEOUT"; then
  echo "Already exists"
else
  if grep -iE "TMOUT|TIMEOUT" /etc/profile; then
    echo "Already exists"
  else
    echo "TMOUT=300" >> /etc/profile
    echo "export TMOUT" >> /etc/profile
  fi
fi

# Check vsftpd umask
if [ -f /etc/vsftpd/vsftpd.conf ]; then
  if [ "$( grep -i ".*umask.*077.*" /etc/vsftpd/vsftpd.conf | grep -v "#" | wc -l)" -eq 0 ]; then
    grep -v "local_umask=022" /etc/vsftpd/vsftpd.conf > "$HOME"/ftp.tmp
    echo "local_umask=077" >> "$HOME"/ftp.tmp
    cat "$HOME"/ftp.tmp > /etc/vsftpd/vsftpd.conf
    rm -rf "$HOME"/ftp.tmp
  fi
fi

### 2013.06.13 add ###
### r command limit add ###
touch /etc/hosts.equiv
chmod 000 /etc/hosts.equiv
touch /root/.rhosts
chmod 000 /root/.rhosts

### ssh root access limit
#TODO - convert to sed in-place edit
perl -pi -e "s/^#PermitRootLogin yes/PermitRootLogin no/" /etc/ssh/sshd_config
perl -pi -e 's/#PermitEmptyPasswords/PermitEmptyPasswords/g' /etc/ssh/sshd_config
echo "AllowGroups wheel" >> /etc/ssh/sshd_config

### 2013.09.09 add ###
# Configure su limit: /etc/pam.d/su
/bin/cp -f /etc/pam.d/su "$RO"
/bin/cat << EOF > /etc/pam.d/su
#%PAM-1.0
auth
sufficient
pam_rootok.so
# Uncomment the following line to implicitly trust users in the "wheel" group.
#auth
sufficient
pam_wheel.so trust use_uid
# Uncomment the following line to require a user to be in the "wheel" group.
auth required pam_wheel.so use_uid
auth substack system-auth
auth include postlogin
account sufficient pam_succeed_if.so uid = 0 use_uid quiet
account include system-auth
password include system-auth
session include system-auth
session include postlogin
session optional pam_xauth.so
EOF

# Configure su limit: /etc/pam.d/su
/bin/cp -f /etc/pam.d/system-auth-ac "$RO"
/bin/cat << EOF > /etc/pam.d/system-auth-ac
#%PAM-1.0
# This file is auto-generated.
# User changes will be destroyed the next time authconfig is run.
auth required pam_env.so
auth required pam_tally2.so onerr=fail deny=10 unlock_time=3600
auth sufficient pam_fprintd.so
auth sufficient pam_unix.so nullok try_first_pass
auth requisite pam_succeed_if.so uid >= 1000 quiet_success
auth required
pam_deny.so
account required pam_tally2.so
account required pam_unix.so
account sufficient pam_localuser.so
account sufficient pam_succeed_if.so uid < 1000 quiet
account required
password
authtok_type=
pam_permit.so
requisite
password sufficient
password required
pam_pwquality.so try_first_pass local_users_only retry=3
pam_unix.so sha512 shadow nullok try_first_pass use_authtok
pam_deny.so
session optional pam_keyinit.so revoke
session required pam_limits.so
-session
optional
pam_systemd.so
session [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uid
session required
pam_unix.so
EOF

%end